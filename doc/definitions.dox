//  Copyright (C) 2001 Roberto Bagnara <bagnara@cs.unipr.it>
//
//  This document describes the Parma University's Recurrence Relation
//  Solver (PURRS).
//
//  Permission is granted to copy, distribute and/or modify this document
//  under the terms of the GNU Free Documentation License, Version 1.1 or
//  any later version published by the Free Software Foundation; with no
//  Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
//  Texts.
//
//  The PURRS is free software; you can redistribute it and/or modify it
//  under the terms of the GNU General Public License as published by the
//  Free Software Foundation; either version 2
//  of the License, or (at your option) any later version.
//
//  The PURRS is distributed in the hope that it will be useful, but WITHOUT
//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
//  for more details.
//
//  For the most up-to-date information see the Parma University's
//  Recurrence Relation Solver
//  site: http://www.cs.unipr.it/purrs/

/*!
  \defgroup PURRS_Library The Library
  The core implementation of the Parma University's Recurrence
  Relation Solver is written in C++. See Namespace, Hierarchical
  and Compound indexes for additional information.
*/

/*! \mainpage Recurrence Relations and the PURRS
\section preamble A C++ library for the (possibly approximate)
	  	  solution of recurrence relations.

FIXME: Abstract to be written.

\section introduction An Introduction to Recurrence Relation

homogeneous

order

linear

first_valid_index:
it is the least non-negative integer \f$ j \f$ such that
the recurrence is well-defined for \f$ n \geq j \f$.

initial conditions (symbolic, user defined)



